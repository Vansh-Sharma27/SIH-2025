{
  "rules": {
    ".read": "auth != null",
    ".write": "auth != null",
    
    "buses": {
      ".indexOn": ["routeId", "status", "lastUpdated"],
      "$busId": {
        ".validate": "newData.hasChildren(['busNumber', 'latitude', 'longitude', 'status', 'lastUpdated'])",
        "busNumber": {
          ".validate": "newData.isString() && newData.val().length > 0"
        },
        "latitude": {
          ".validate": "newData.isNumber() && newData.val() >= -90 && newData.val() <= 90"
        },
        "longitude": {
          ".validate": "newData.isNumber() && newData.val() >= -180 && newData.val() <= 180"
        },
        "status": {
          ".validate": "newData.isString() && (newData.val() == 'active' || newData.val() == 'inactive' || newData.val() == 'maintenance')"
        },
        "lastUpdated": {
          ".validate": "newData.isNumber()"
        },
        "routeId": {
          ".validate": "newData.isString()"
        },
        "driverId": {
          ".validate": "newData.isString()"
        },
        "passengerCount": {
          ".validate": "newData.isNumber() && newData.val() >= 0 && newData.val() <= 100"
        },
        "speed": {
          ".validate": "newData.isNumber() && newData.val() >= 0"
        },
        "heading": {
          ".validate": "newData.isNumber() && newData.val() >= 0 && newData.val() <= 360"
        }
      }
    },
    
    "routes": {
      ".indexOn": ["isActive", "routeNumber"],
      "$routeId": {
        ".validate": "newData.hasChildren(['routeName', 'routeNumber', 'stops', 'startPoint', 'endPoint'])",
        "routeName": {
          ".validate": "newData.isString() && newData.val().length > 0"
        },
        "routeNumber": {
          ".validate": "newData.isString() && newData.val().length > 0"
        },
        "stops": {
          ".validate": "newData.hasChildren()",
          "$stopId": {
            ".validate": "newData.hasChildren(['id', 'name', 'latitude', 'longitude', 'sequenceNumber'])"
          }
        },
        "isActive": {
          ".validate": "newData.isBoolean()"
        }
      }
    },
    
    "users": {
      "$userId": {
        ".read": "$userId === auth.uid || root.child('users/' + auth.uid + '/userType').val() === 'admin'",
        ".write": "$userId === auth.uid || root.child('users/' + auth.uid + '/userType').val() === 'admin'",
        ".validate": "newData.hasChildren(['name', 'email', 'phoneNumber', 'userType', 'createdAt'])",
        "name": {
          ".validate": "newData.isString() && newData.val().length > 0"
        },
        "email": {
          ".validate": "newData.isString() && newData.val().matches(/^[A-Za-z0-9+_.-]+@(.+)$/)"
        },
        "phoneNumber": {
          ".validate": "newData.isString() && newData.val().matches(/^[+]?[0-9]{10,15}$/)"
        },
        "userType": {
          ".validate": "newData.isString() && (newData.val() == 'passenger' || newData.val() == 'driver' || newData.val() == 'admin')"
        }
      }
    },
    
    "feedback": {
      ".indexOn": ["userId", "busId", "timestamp", "type"],
      "$feedbackId": {
        ".validate": "newData.hasChildren(['userId', 'busId', 'type', 'timestamp'])",
        "userId": {
          ".validate": "newData.isString() && newData.val() === auth.uid"
        },
        "busId": {
          ".validate": "newData.isString()"
        },
        "type": {
          ".validate": "newData.isString() && (newData.val() == 'delay' || newData.val() == 'crowding' || newData.val() == 'boarding' || newData.val() == 'breakdown')"
        },
        "timestamp": {
          ".validate": "newData.isNumber()"
        }
      }
    },
    
    "notifications": {
      ".indexOn": ["routeId", "timestamp", "type"],
      "$notificationId": {
        ".validate": "newData.hasChildren(['routeId', 'type', 'timestamp', 'message'])",
        "routeId": {
          ".validate": "newData.isString()"
        },
        "type": {
          ".validate": "newData.isString() && (newData.val() == 'arrival' || newData.val() == 'delay' || newData.val() == 'crowding' || newData.val() == 'route_update')"
        },
        "timestamp": {
          ".validate": "newData.isNumber()"
        },
        "message": {
          ".validate": "newData.isString()"
        }
      }
    }
  }
}
